% Created 2017-12-05 Tue 19:16
\documentclass[11pt]{article}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{fixltx2e}
\usepackage{graphicx}
\usepackage{longtable}
\usepackage{float}
\usepackage{wrapfig}
\usepackage{rotating}
\usepackage[normalem]{ulem}
\usepackage{amsmath}
\usepackage{textcomp}
\usepackage{marvosym}
\usepackage{wasysym}
\usepackage{amssymb}
\usepackage{hyperref}
\tolerance=1000
\usepackage{xeCJK}
\setCJKmainfont{宋体}
\hypersetup{colorlinks=true,linkcolor=red}
\usepackage{minted}
\usepackage{geometry}
\geometry{left=2.0cm,right=2.0cm,top=2.5cm,bottom=2.5cm}
\setmainfont{Times New Roman}
\setsansfont{Arial}
\setmonofont{Courier New}
\usepackage{indentfirst}
\setlength{\parindent}{2em}
\author{MiracleEEEE}
\date{\today}
\title{Task}
\hypersetup{
  pdfkeywords={},
  pdfsubject={},
  pdfcreator={Emacs 25.3.1 (Org mode 8.2.10)}}
\begin{document}

\maketitle
\tableofcontents


\section{知识点补全计划}
\label{sec-1}
\subsection{省选 [0/7]}
\label{sec-1-1}
\subsubsection{{\bfseries\sffamily TODO} 字符串 [4/6]}
\label{sec-1-1-1}
\begin{itemize}
\item $\boxtimes$ 后缀数组
\item $\square$ 后缀自动机
\item $\square$ 后缀平衡树
\item $\boxtimes$ AC自动机
\item $\boxtimes$ KMP及扩展KMP
\item $\boxtimes$ manacher
\end{itemize}
\subsubsection{{\bfseries\sffamily TODO} 图论 [3/17]}
\label{sec-1-1-2}

\begin{itemize}
\item $\boxtimes$ 双连通分量
\item $\square$ 最大流
\item $\square$ 费用流
\item $\square$ 最小割
\item $\square$ 带上下界的网络流
\item $\boxtimes$ 树剖
\item $\square$ LCT
\item $\boxtimes$ 点分治
\item $\square$ 边分治
\item $\square$ 动态树分治
\item $\square$ 树分块
\item $\square$ 虚树
\item $\square$ 仙人掌
\item $\square$ 朱刘算法
\item $\square$ 弦图
\item $\square$ 区间图
\item $\square$ 对偶图
\end{itemize}

\subsubsection{{\bfseries\sffamily TODO} 数学 [4/25]}
\label{sec-1-1-3}

\begin{itemize}
\item $\boxtimes$ 中国剩余定理
\item $\square$ 博弈论
\item $\square$ 拉格朗日乘子法
\item $\square$ 单纯型
\item $\square$ 辛普森积分
\item $\boxtimes$ 容斥原理
\item $\square$ 莫比乌斯反演
\item $\square$ BSGS
\item $\square$ 置换群
\item $\square$ FFT
\item $\square$ NTT
\item $\square$ 多项式求逆
\item $\square$ 二次剩余
\item $\square$ 多项式科技
\item $\square$ 积分
\item $\square$ 极限
\item $\square$ 微分
\item $\square$ 导数
\item $\square$ Ploya定理
\item $\square$ 贝叶斯定理
\item $\square$ 杜教筛
\item $\square$ Pollard-Rho 圆锥曲线分解法
\item $\boxtimes$ 线性基
\item $\square$ Miller-Rabin 素性探测
\item $\boxtimes$ 高斯消元
\end{itemize}

\subsubsection{{\bfseries\sffamily TODO} 动态规划 [2/6]}
\label{sec-1-1-4}

\begin{itemize}
\item $\square$ 斜率优化
\item $\square$ 插头DP
\item $\square$ 四边形不等式
\item $\square$ 斯坦纳树
\item $\boxtimes$ 数位DP
\item $\boxtimes$ 区间DP
\end{itemize}

\subsubsection{{\bfseries\sffamily TODO} 计算几何 [2/9]}
\label{sec-1-1-5}

\begin{itemize}
\item $\boxtimes$ 基础内容
\item $\square$ 凸包
\item $\square$ 三角剖分
\item $\square$ 旋转卡壳
\item $\square$ 半平面交
\item $\square$ picks定理
\item $\boxtimes$ 扫描线
\item $\square$ 动态凸包
\item $\square$ 三维计算几何
\end{itemize}

\subsubsection{{\bfseries\sffamily TODO} 搜索 [0/3]}
\label{sec-1-1-6}

\begin{itemize}
\item $\square$ 模拟退火
\item $\square$ 爬山算法
\item $\square$ 随机增量法
\end{itemize}

\subsubsection{{\bfseries\sffamily TODO} 数据结构 [0/4]}
\label{sec-1-1-7}

\begin{enumerate}
\item {\bfseries\sffamily TODO} 离线算法 [1/5]
\label{sec-1-1-7-1}

\begin{itemize}
\item $\square$ 莫队
\item $\square$ 树上莫队
\item $\square$ 单调莫队
\item $\square$ CDQ分治
\item $\boxtimes$ 整体二分
\end{itemize}

\item {\bfseries\sffamily TODO} 平衡树 [1/3]
\label{sec-1-1-7-2}

\begin{itemize}
\item $\square$ rope
\item $\boxtimes$ Treap
\item $\square$ 替罪羊树
\end{itemize}

\item {\bfseries\sffamily TODO} 其他 [1/6]
\label{sec-1-1-7-3}

\begin{itemize}
\item $\boxtimes$ 主席树
\item $\square$ 线段树
\item $\square$ 划分树
\item $\square$ KD-Tree
\item $\square$ 块状链表
\item $\square$ 二维线段树
\end{itemize}

\item {\bfseries\sffamily TODO} 可持久化数据结构 [0/5]
\label{sec-1-1-7-4}

\begin{itemize}
\item $\square$ 平衡树
\item $\square$ 数组
\item $\square$ Trie树
\item $\square$ 块状链表
\item $\square$ 动态仙人掌
\end{itemize}
\end{enumerate}

\section{鏼题计划}
\label{sec-2}
\subsection{题目泛做}
\label{sec-2-1}
\subsubsection{NOIP 题目泛做 [1/1]}
\label{sec-2-1-1}
\begin{enumerate}
\item {\bfseries\sffamily DONE} \href{https://www.luogu.org/problemnew/show/2831}{NOIP 2016 愤怒的小鸟} \textit{<2017-11-24 Fri>}\hfill{}\textsc{状态压缩:动态规划}
\label{sec-2-1-1-1}

\begin{itemize}
\item 题目大意

给出 $n \leq 18$ 个敌人坐标，每次可以可以消灭一条过 $(0,0)$ 抛物线上的敌人，求最小次数。

\item 算法分析

$n$ 很小考虑状压。最朴素的动态规划，用 $f[s]$ 表示消灭 $s$ 中的敌人的方案数。枚举下一次消灭哪两个敌人，计算抛物线转移，时间复杂度 $O(n^32^n)$ ，还可以继续优化。我们可以预处理抛物线能消灭哪些敌人，时间复杂度变为 $O(n^22^n)$ 。但还不够。考虑第一个敌人在这个状态转移的状态中一定被某一条抛物线消灭，这样我们只考虑过第一个敌人的抛物线，枚举其他敌人转移，一定不会丢失最优解。时间复杂度变为 $O(n2^n)$ 。
\end{itemize}
\end{enumerate}

\subsection{杂}
\label{sec-2-2}
\subsubsection{2017年11月 [2/2]}
\label{sec-2-2-1}
\begin{enumerate}
\item {\bfseries\sffamily DONE} \href{https://vjudge.net/problem/POJ-3693}{POJ 3693 Maximum repetition substring} \textit{<2017-11-24 Fri>}\hfill{}\textsc{后缀数组:ST表}
\label{sec-2-2-1-1}

\begin{itemize}
\item 题目大意

给出一个字符串，求最大重复子串（重复次数最多，如果存在多个，求字典序最小的那一个）。

\item 算法分析

后缀数组的应用。直接下手不好解决，不妨枚举一下循环节的长度 $|L|$ 。我们发现，任何一个循环节为 $|L|$ 重复子串总会包含至少两个 $s[0],s[|L|],s[2|L|], \cdots$  字符。那么考虑枚举两个相邻的上述字符，可以通过后缀数组 $+ST$ 表 $O(1)$ 求出 $LCP$ 的长度，但是最长公共子串的开头并不一定是我们枚举的字符，所以还需要求出最长向前能匹配多少。这可以通过倒过来做一次后缀数组得到。那么我们现在有了一个极长区间，可以求得这个区间的循环节个数 $k$ ，也就可以求出一个区间 $[l,r]$ 满足开头落在这个区间内部的最大重复子串的循环节个数都为 $k$ 。只需要找字典序最小的一个。那么用 $ST$ 表查一下这个区间内最小的 $rank$ 的后缀就好了。时间复杂度 $O\Big(\sum_{i=1}^{n}\frac{n}{i}\Big)=O(nlogn)$ 。有一个优化，当求得一个极长重复子串之后，落在子串内的 $s[i|L|]$ 都不用再枚举了。
\end{itemize}

\item {\bfseries\sffamily DONE} \href{http://www.lydsy.com/JudgeOnline/problem.php?id=4310}{BZOJ 4310 跳蚤} \textit{<2017-11-29 Wed>}\hfill{}\textsc{后缀数组:ST表:二分查找}
\label{sec-2-2-1-2}

\begin{itemize}
\item 题目大意

给出一个字符串 $S$ ，将它分成不超过 $k$ 个子串，对于每个子串 $T$ ，设 $T'$ 为其最大子串，最小化选出的 $k$ 个 $T'_i$ 的最大值。

\item 算法分析

最大值最小可以二分。可以利用后缀数组求出本质不同的子串个数，对于一个第 $k$ 大的子串，可以利用后缀数组求出它具体是谁。然后从后向前贪心扫描分块即可。注意一下比较两个串大小时的细节。设第 $k$ 大的子串和要比较的串在后缀数组中第一次出现的位置分别为为 $p_0,p_1$ ，分 $p_1 < p_0,p_1=p_0,p_1 > p_0$ 三种情况讨论即可。
\end{itemize}
\end{enumerate}
% Emacs 25.3.1 (Org mode 8.2.10)
\end{document}
